//
//  lookup.h
//  pathfinder
//
//  Created by Lukas Labhart on 7/25/13.
//  Copyright (c) 2013 Lukas Labhart. All rights reserved.
//
/*
    This file generates a lookup table for several sine/cosine, depending on the number of discrete points per obstacle
 */

#ifndef _lookup_h
#define _lookup_h

#include "mapgen.h"

//int arctangens[1000][1000];
int arctangens[1000000];
float tangens[90];
//static const float tangens[90] = {0.000000, 0.017455, 0.034921, 0.052408, 0.069927, 0.087489, 0.105104, 0.122785, 0.140541, 0.158384, 0.176327, 0.194380, 0.212557, 0.230868, 0.249328, 0.267949, 0.286745, 0.305731, 0.324920, 0.344328, 0.363970, 0.383864, 0.404026, 0.424475, 0.445229, 0.466308, 0.487733, 0.509525, 0.531709, 0.554309, 0.577350, 0.600861, 0.624869, 0.649408, 0.674509, 0.700208, 0.726543, 0.753554, 0.781286, 0.809784, 0.839100, 0.869287, 0.900404, 0.932515, 0.965689, 1.000000, 1.035530, 1.072369, 1.110613, 1.150368, 1.191754, 1.234897, 1.279942, 1.327045, 1.376382, 1.428148, 1.482561, 1.539865, 1.600335, 1.664279, 1.732051, 1.804048, 1.880726, 1.962611, 2.050304, 2.144507, 2.246037, 2.355852, 2.475087, 2.605089, 2.747477, 2.904211, 3.077684, 3.270853, 3.487414, 3.732051, 4.010781, 4.331476, 4.704630, 5.144554, 5.671282, 6.313752, 7.115370, 8.144346, 9.514364, 11.430052, 14.300666, 19.081137, 28.636253, 57.289962};


#if N_DISC == 6
static const float cos_l[N_DISC+1] = {1, 0.5, -0.5, -1, -0.5, 0.5, 0.866};
static const float sin_l[N_DISC] = {0, 0.866, 0.866, 0, -0.866, -0.866};
#elif N_DISC == 12
static const float cos_l[N_DISC+1] = {1, 0.866, 0.5, 0,-0.5,-0.866, -1, -0.866, -0.5, 0, 0.5, 0.866, 1.0353};
static const float sin_l[N_DISC] = {0, 0.5, 0.866, 1, 0.866, 0.5, 0, -0.5, -0.866, -1, -0.866, -0.5};
#elif N_DISC == 24
static const float cos_l[N_DISC+1] ={ 1, 0.965926, 0.866025, 0.707107, 0.5, 0.258819, 0,-0.258819, -0.5, -0.707107, -0.866025, -0.965926, -1, -0.965926, -0.866025, -0.707107, -0.5, -0.258819, 0, 0.258819, 0.5, 0.707107, 0.866025, 0.965926, 1.008629};
static const float sin_l[N_DISC] = { 0, 0.258819, 0.5, 0.707107, 0.866025, 0.965926, 1, 0.965926, 0.866025, 0.707107, 0.5, 0.258819, 0, -0.258819, -0.5, -0.707107, -0.866025, -0.965926, -1, -0.965926, -0.866025, -0.707107, -0.5, -0.258819};
/*#elif N_DISC == 18
static const float sin_l[N_DISC]={0.000000, 0.342020, 0.642788, 0.866025, 0.984808, 0.984808, 0.866025, 0.642788, 0.342020, 0.000000, -0.342020, -0.642788, -0.866025, -0.984808, -0.984808, -0.866025, -0.642788, -0.342020};
static const float cos_l[N_DISC+1]={1.000000, 0.939693, 0.766044, 0.500000, 0.173648, -0.173648, -0.500000, -0.766044, -0.939693, -1.000000, -0.939693, -0.766044, -0.500000, -0.173648, 0.173648, 0.500000, 0.766044, 0.939693, 0.984808};*/
#else
float cos_l[N_DISC+1];
float sin_l[N_DISC];
#endif

void LOOKUP_init();

int arctan(int x, int y);

float tang(int x);


#endif
